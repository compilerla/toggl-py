"""
Public Toggl API. Note: We use BasicAuth in a specific way. By the standard you provide `Authentication` header with `base64(user_name:password)` as a `credential`. In our case it will be `base64(user_name:api_token)`.  # noqa: E501

This file is auto generated by the swagger code generator program.
Do not edit this file manually.

OpenAPI spec version: 9
Last changed: 2024-04-26T22:13:16.785Z
Generated by: https://github.com/compilerla/toggl-py/tree/main/codegen
"""

import pprint
import re  # noqa: F401

from toggl.configuration import Configuration


class ModelsUserInvoice:
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """

    swagger_types = {
        "billing_address": "str",
        "created_at": "str",
        "currency": "str",
        "_date": "str",
        "deleted_at": "str",
        "document_id": "str",
        "due_date": "str",
        "items": "list[ModelsUserInvoiceItem]",
        "message": "str",
        "payment_terms": "str",
        "purchase_number": "str",
        "taxes": "list[ModelsUserInvoiceTax]",
        "updated_at": "str",
        "user_id": "int",
        "user_invoice_id": "int",
        "workspace_address": "str",
        "workspace_id": "int",
        "workspace_logo": "str",
    }

    attribute_map = {
        "billing_address": "billing_address",
        "created_at": "created_at",
        "currency": "currency",
        "_date": "date",
        "deleted_at": "deleted_at",
        "document_id": "document_id",
        "due_date": "due_date",
        "items": "items",
        "message": "message",
        "payment_terms": "payment_terms",
        "purchase_number": "purchase_number",
        "taxes": "taxes",
        "updated_at": "updated_at",
        "user_id": "user_id",
        "user_invoice_id": "user_invoice_id",
        "workspace_address": "workspace_address",
        "workspace_id": "workspace_id",
        "workspace_logo": "workspace_logo",
    }

    def __init__(
        self,
        billing_address=None,
        created_at=None,
        currency=None,
        _date=None,
        deleted_at=None,
        document_id=None,
        due_date=None,
        items=None,
        message=None,
        payment_terms=None,
        purchase_number=None,
        taxes=None,
        updated_at=None,
        user_id=None,
        user_invoice_id=None,
        workspace_address=None,
        workspace_id=None,
        workspace_logo=None,
        _configuration=None,
    ):  # noqa: E501
        """ModelsUserInvoice - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._billing_address = None
        self._created_at = None
        self._currency = None
        self.__date = None
        self._deleted_at = None
        self._document_id = None
        self._due_date = None
        self._items = None
        self._message = None
        self._payment_terms = None
        self._purchase_number = None
        self._taxes = None
        self._updated_at = None
        self._user_id = None
        self._user_invoice_id = None
        self._workspace_address = None
        self._workspace_id = None
        self._workspace_logo = None
        self.discriminator = None

        if billing_address is not None:
            self.billing_address = billing_address
        if created_at is not None:
            self.created_at = created_at
        if currency is not None:
            self.currency = currency
        if _date is not None:
            self._date = _date
        if deleted_at is not None:
            self.deleted_at = deleted_at
        if document_id is not None:
            self.document_id = document_id
        if due_date is not None:
            self.due_date = due_date
        if items is not None:
            self.items = items
        if message is not None:
            self.message = message
        if payment_terms is not None:
            self.payment_terms = payment_terms
        if purchase_number is not None:
            self.purchase_number = purchase_number
        if taxes is not None:
            self.taxes = taxes
        if updated_at is not None:
            self.updated_at = updated_at
        if user_id is not None:
            self.user_id = user_id
        if user_invoice_id is not None:
            self.user_invoice_id = user_invoice_id
        if workspace_address is not None:
            self.workspace_address = workspace_address
        if workspace_id is not None:
            self.workspace_id = workspace_id
        if workspace_logo is not None:
            self.workspace_logo = workspace_logo

    @property
    def billing_address(self):
        """Gets the billing_address of this ModelsUserInvoice.  # noqa: E501


        :return: The billing_address of this ModelsUserInvoice.  # noqa: E501
        :rtype: str
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this ModelsUserInvoice.


        :param billing_address: The billing_address of this ModelsUserInvoice.  # noqa: E501
        :type: str
        """

        self._billing_address = billing_address

    @property
    def created_at(self):
        """Gets the created_at of this ModelsUserInvoice.  # noqa: E501


        :return: The created_at of this ModelsUserInvoice.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ModelsUserInvoice.


        :param created_at: The created_at of this ModelsUserInvoice.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def currency(self):
        """Gets the currency of this ModelsUserInvoice.  # noqa: E501


        :return: The currency of this ModelsUserInvoice.  # noqa: E501
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this ModelsUserInvoice.


        :param currency: The currency of this ModelsUserInvoice.  # noqa: E501
        :type: str
        """

        self._currency = currency

    @property
    def _date(self):
        """Gets the _date of this ModelsUserInvoice.  # noqa: E501


        :return: The _date of this ModelsUserInvoice.  # noqa: E501
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this ModelsUserInvoice.


        :param _date: The _date of this ModelsUserInvoice.  # noqa: E501
        :type: str
        """

        self.__date = _date

    @property
    def deleted_at(self):
        """Gets the deleted_at of this ModelsUserInvoice.  # noqa: E501


        :return: The deleted_at of this ModelsUserInvoice.  # noqa: E501
        :rtype: str
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this ModelsUserInvoice.


        :param deleted_at: The deleted_at of this ModelsUserInvoice.  # noqa: E501
        :type: str
        """

        self._deleted_at = deleted_at

    @property
    def document_id(self):
        """Gets the document_id of this ModelsUserInvoice.  # noqa: E501


        :return: The document_id of this ModelsUserInvoice.  # noqa: E501
        :rtype: str
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id):
        """Sets the document_id of this ModelsUserInvoice.


        :param document_id: The document_id of this ModelsUserInvoice.  # noqa: E501
        :type: str
        """

        self._document_id = document_id

    @property
    def due_date(self):
        """Gets the due_date of this ModelsUserInvoice.  # noqa: E501


        :return: The due_date of this ModelsUserInvoice.  # noqa: E501
        :rtype: str
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this ModelsUserInvoice.


        :param due_date: The due_date of this ModelsUserInvoice.  # noqa: E501
        :type: str
        """

        self._due_date = due_date

    @property
    def items(self):
        """Gets the items of this ModelsUserInvoice.  # noqa: E501


        :return: The items of this ModelsUserInvoice.  # noqa: E501
        :rtype: list[ModelsUserInvoiceItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this ModelsUserInvoice.


        :param items: The items of this ModelsUserInvoice.  # noqa: E501
        :type: list[ModelsUserInvoiceItem]
        """

        self._items = items

    @property
    def message(self):
        """Gets the message of this ModelsUserInvoice.  # noqa: E501


        :return: The message of this ModelsUserInvoice.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ModelsUserInvoice.


        :param message: The message of this ModelsUserInvoice.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def payment_terms(self):
        """Gets the payment_terms of this ModelsUserInvoice.  # noqa: E501


        :return: The payment_terms of this ModelsUserInvoice.  # noqa: E501
        :rtype: str
        """
        return self._payment_terms

    @payment_terms.setter
    def payment_terms(self, payment_terms):
        """Sets the payment_terms of this ModelsUserInvoice.


        :param payment_terms: The payment_terms of this ModelsUserInvoice.  # noqa: E501
        :type: str
        """

        self._payment_terms = payment_terms

    @property
    def purchase_number(self):
        """Gets the purchase_number of this ModelsUserInvoice.  # noqa: E501


        :return: The purchase_number of this ModelsUserInvoice.  # noqa: E501
        :rtype: str
        """
        return self._purchase_number

    @purchase_number.setter
    def purchase_number(self, purchase_number):
        """Sets the purchase_number of this ModelsUserInvoice.


        :param purchase_number: The purchase_number of this ModelsUserInvoice.  # noqa: E501
        :type: str
        """

        self._purchase_number = purchase_number

    @property
    def taxes(self):
        """Gets the taxes of this ModelsUserInvoice.  # noqa: E501


        :return: The taxes of this ModelsUserInvoice.  # noqa: E501
        :rtype: list[ModelsUserInvoiceTax]
        """
        return self._taxes

    @taxes.setter
    def taxes(self, taxes):
        """Sets the taxes of this ModelsUserInvoice.


        :param taxes: The taxes of this ModelsUserInvoice.  # noqa: E501
        :type: list[ModelsUserInvoiceTax]
        """

        self._taxes = taxes

    @property
    def updated_at(self):
        """Gets the updated_at of this ModelsUserInvoice.  # noqa: E501


        :return: The updated_at of this ModelsUserInvoice.  # noqa: E501
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ModelsUserInvoice.


        :param updated_at: The updated_at of this ModelsUserInvoice.  # noqa: E501
        :type: str
        """

        self._updated_at = updated_at

    @property
    def user_id(self):
        """Gets the user_id of this ModelsUserInvoice.  # noqa: E501


        :return: The user_id of this ModelsUserInvoice.  # noqa: E501
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ModelsUserInvoice.


        :param user_id: The user_id of this ModelsUserInvoice.  # noqa: E501
        :type: int
        """

        self._user_id = user_id

    @property
    def user_invoice_id(self):
        """Gets the user_invoice_id of this ModelsUserInvoice.  # noqa: E501


        :return: The user_invoice_id of this ModelsUserInvoice.  # noqa: E501
        :rtype: int
        """
        return self._user_invoice_id

    @user_invoice_id.setter
    def user_invoice_id(self, user_invoice_id):
        """Sets the user_invoice_id of this ModelsUserInvoice.


        :param user_invoice_id: The user_invoice_id of this ModelsUserInvoice.  # noqa: E501
        :type: int
        """

        self._user_invoice_id = user_invoice_id

    @property
    def workspace_address(self):
        """Gets the workspace_address of this ModelsUserInvoice.  # noqa: E501


        :return: The workspace_address of this ModelsUserInvoice.  # noqa: E501
        :rtype: str
        """
        return self._workspace_address

    @workspace_address.setter
    def workspace_address(self, workspace_address):
        """Sets the workspace_address of this ModelsUserInvoice.


        :param workspace_address: The workspace_address of this ModelsUserInvoice.  # noqa: E501
        :type: str
        """

        self._workspace_address = workspace_address

    @property
    def workspace_id(self):
        """Gets the workspace_id of this ModelsUserInvoice.  # noqa: E501


        :return: The workspace_id of this ModelsUserInvoice.  # noqa: E501
        :rtype: int
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id):
        """Sets the workspace_id of this ModelsUserInvoice.


        :param workspace_id: The workspace_id of this ModelsUserInvoice.  # noqa: E501
        :type: int
        """

        self._workspace_id = workspace_id

    @property
    def workspace_logo(self):
        """Gets the workspace_logo of this ModelsUserInvoice.  # noqa: E501


        :return: The workspace_logo of this ModelsUserInvoice.  # noqa: E501
        :rtype: str
        """
        return self._workspace_logo

    @workspace_logo.setter
    def workspace_logo(self, workspace_logo):
        """Sets the workspace_logo of this ModelsUserInvoice.


        :param workspace_logo: The workspace_logo of this ModelsUserInvoice.  # noqa: E501
        :type: str
        """

        self._workspace_logo = workspace_logo

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in self.swagger_types.items():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(lambda item: (item[0], item[1].to_dict()) if hasattr(item[1], "to_dict") else item, value.items())
                )
            else:
                result[attr] = value
        if issubclass(ModelsUserInvoice, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ModelsUserInvoice):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ModelsUserInvoice):
            return True

        return self.to_dict() != other.to_dict()
